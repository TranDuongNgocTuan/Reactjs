{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","handleChange","event","target","value","setState","submitForm","handleSubmit","state","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OAAO,gCAAQJ,KAiBFS,E,uKAZH,IAAD,EACkCC,KAAKX,MAAvCE,EADA,EACAA,cAAeO,EADf,EACeA,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,W,GAR9CG,a,OCmBLC,E,4MA7CbC,aAAe,CACbR,KAAM,GACNC,IAAK,I,EAGPQ,aAAe,SAACC,GAAW,IAAD,EACFA,EAAMC,OAArBX,EADiB,EACjBA,KAAMY,EADW,EACXA,MAEb,EAAKC,SAAL,eACGb,EAAOY,K,EAIZE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKL,e,EAGrBQ,MAAQ,EAAKR,a,uDAEH,IAAD,EACeH,KAAKW,MAAnBhB,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,iCACE,uBAAOgB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHP,MAAOZ,EACPoB,SAAUf,KAAKI,eACjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHP,MAAOX,EACPmB,SAAUf,KAAKI,eACf,uBAAOS,KAAK,SAASN,MAAM,SAASV,QAASG,KAAKS,oB,GAxCzCR,aCgCJe,E,4MA5BbL,MAAQ,CACNM,WAAY,I,EAGdnB,gBAAkB,SAACJ,GAAW,IACrBuB,EAAc,EAAKN,MAAnBM,WAEP,EAAKT,SAAS,CACZS,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBgB,aAAe,SAACS,GACd,EAAKX,SAAS,CAACS,WAAW,GAAD,mBAAM,EAAKN,MAAMM,YAAjB,CAA6BE,O,uDAItD,OACE,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAeS,KAAKW,MAAMM,WAAYnB,gBAAiBE,KAAKF,kBACnE,cAAC,EAAD,CAAMY,aAAcV,KAAKU,sB,GAxBfT,a,MCClBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7de58ea5.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\nclass Table extends Component {\r\n\r\n  render() {\r\n    const {characterData, removeCharacter} = this.props\r\n\r\n    return (\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job: '',\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  state = this.initialState\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n  \r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n          <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Table characterData={this.state.characters} removeCharacter={this.removeCharacter}/>\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}