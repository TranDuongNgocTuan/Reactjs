{"version":3,"sources":["Components/Expression.js","Components/InputCron.js","App/App.js","index.js"],"names":["Expression","state","ANY_VALUE","RANGE","VALUE","START","NUMBER","SPACE","EVERY_TIME","AT_TIME","TIME","BETWEEN","PAST_EVERY","PAST_EVERY_BETWEEN","isNumber","number","RegExp","test","expressionRange","point","exp","split","localeCompare","expressionStart","expressionMessageRange","el","replace","expressionMessageStart","length","i","findSyntax","search","convention","message","subExp","String","trim","concat","expression","messageHour","Component","Title","Typography","InputsCron","props","cron","time","event","target","name","value","setState","handleExpression","console","log","convertExpression","this","orientation","justify","gutter","className","span","placeholder","style","textAlign","onChange","level","App","characters","handleSubmit","character","InputCron","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fd15119.chunk.js","sourcesContent":["import {Component} from 'react'\r\n\r\nclass Expression extends Component{\r\n\r\n  state = {\r\n    ANY_VALUE: \"*\",\r\n    RANGE: \"-\",\r\n    VALUE: \",\",\r\n    START: \"/\",\r\n    NUMBER: /^\\d+$/,\r\n    \r\n    SPACE: \" \",\r\n    EVERY_TIME: `Every $kind $time`,\r\n    AT_TIME: `At $kind $time`,\r\n    TIME: \"$time\",\r\n    BETWEEN: `between the $kind [$from - $to)`,\r\n    PAST_EVERY: \"past every $to $kind from $from\",\r\n    PAST_EVERY_BETWEEN: \"past every $very $kind from [$from - $to)\",\r\n  };\r\n\r\n  isNumber = (number) => {\r\n    const regex = new RegExp(this.state.NUMBER);\r\n    return regex.test(number);\r\n  }\r\n\r\n  expressionRange = (point) => {\r\n    let exp = point.split(this.state.RANGE);\r\n\r\n    if (!this.isNumber(exp[0]) && !this.isNumber(exp[1]))\r\n      return false;\r\n\r\n    if (exp[0].localeCompare(exp[1]) > 0)\r\n      return false;\r\n    \r\n    return exp;\r\n  }\r\n\r\n  expressionStart = (point) => {\r\n    let exp = point.split(this.state.START);\r\n\r\n    if (!this.isNumber(exp[0]) && !this.isNumber(exp[1]))\r\n      return false;\r\n\r\n    if (this.isNumber(exp[0]) && this.isNumber(exp[1]))\r\n      return exp;\r\n    \r\n    if (!this.isNumber(exp[0]) && this.isNumber(exp[1])) {\r\n      return [exp[1], ...this.expressionRange(exp[0])];\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  expressionMessageRange = (el) => {\r\n    return this.state.BETWEEN\r\n            .replace(\"$from\", el[0])\r\n            .replace(\"$to\", el[1]);\r\n  }\r\n\r\n  expressionMessageStart = (el) => {\r\n    if (el.length === 3) \r\n      return this.state.PAST_EVERY_BETWEEN\r\n              .replace(\"$very\", el[0])\r\n              .replace(\"$from\", el[1])\r\n              .replace(\"$to\", el[2]);\r\n    \r\n    return this.state.PAST_EVERY\r\n            .replace(\"$to\", el[0])\r\n            .replace(\"$from\", el[1]);\r\n  }\r\n\r\n  expressionMessageRange = (el, i) => {\r\n    if (i > 0)\r\n      return this.state.TIME.replace(\"$time\", el);\r\n\r\n    return this.state.AT_TIME.replace(\"$time\", el);\r\n  }\r\n\r\n  findSyntax = (point, i) => {\r\n\r\n    if (point.search(this.state.START) > 0) {\r\n      return this.expressionMessageStart(this.expressionStart(point));\r\n    }\r\n\r\n    if (point.search(this.state.RANGE) > 0) {\r\n      return this.expressionMessageRange(this.expressionRange(point));\r\n    }\r\n\r\n    if (this.isNumber(point)) {\r\n      return this.expressionMessageRange(point, i);\r\n    }\r\n  }\r\n\r\n  convention = (exp) => {\r\n    let message = \"\";\r\n    let subExp = String(exp).trim().split(this.state.VALUE);\r\n\r\n    for (var i=0; i < subExp.length-1; i++) {\r\n      message = message\r\n              .concat(this.findSyntax(subExp[i], i))\r\n              .concat(this.state.VALUE);\r\n    }\r\n\r\n    return message.concat(this.findSyntax(subExp[subExp.length-1], i));\r\n  }\r\n\r\n  expression = (exp) => {\r\n    let message = \"\";\r\n    const subExp = String(exp).trim().split(\" \");\r\n\r\n    if (subExp[0] !== \"*\") {\r\n\r\n      let messageSecond = this.convention(subExp[0]);\r\n\r\n      if (messageSecond === \"undefined\")\r\n        return message;\r\n\r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(this.convention(subExp[0]))\r\n                .replace(\"$kind\", \"second\");\r\n    }\r\n\r\n    if (subExp[1] !== \"*\" && subExp.length > 1) {\r\n\r\n      let messageMinute = this.convention(subExp[1]);\r\n\r\n      if (messageMinute === \"undefined\")\r\n        return message;\r\n\r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(this.convention(subExp[1]))\r\n                .replace(\"$kind\", \"minute\");\r\n    }\r\n\r\n    if (subExp[2] !== \"*\" && subExp.length > 2) {\r\n      \r\n      let messageHour = this.convention(subExp[2]);\r\n\r\n      if (messageHour === \"undefined\")\r\n        return message;\r\n      \r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(messageHour)\r\n                .replace(/\\$kind/g, \"hour\");\r\n    }\r\n\r\n    if (subExp[3] !== \"*\" && subExp.length > 3) {\r\n\r\n      let messageDay = this.convention(subExp[3]);\r\n\r\n      if (messageDay === \"undefined\")\r\n        return message;\r\n\r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(this.convention(subExp[3]))\r\n                .replace(\"$kind\", \"day\");\r\n    }\r\n\r\n    if (subExp[4] !== \"*\" && subExp.length > 4) {\r\n\r\n      let messageMonth = this.convention(subExp[4]);\r\n\r\n      if (messageMonth === \"undefined\")\r\n        return message;\r\n\r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(this.convention(subExp[4]))\r\n                .replace(\"$kind\", \"month\");\r\n    }\r\n\r\n    if (subExp[5] !== \"*\" && subExp.length > 5) {\r\n\r\n      let messageWeekday = this.convention(subExp[5]);\r\n\r\n      if (messageWeekday === \"undefined\")\r\n        return message;\r\n\r\n      message = message\r\n                .concat(this.state.SPACE)\r\n                .concat(this.convention(subExp[5]))\r\n                .replace(\"$kind\", \"weekday\");\r\n    }\r\n\r\n    return message.trim();\r\n  }\r\n\r\n  // render() {\r\n  //   const exp = this.props;\r\n\r\n  //   return (\r\n  //     this.expression(exp)\r\n  //   )\r\n  // }\r\n}\r\n\r\nexport default Expression;","import React, {Component} from 'react';\r\nimport { Divider, Row, Col, Typography, Input } from 'antd';\r\nimport Expression from './Expression';\r\nconst { Title } = Typography;\r\n\r\nclass InputsCron extends Component {\r\n\r\n  state = {\r\n    cron: '',\r\n    message: '',\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.expression = {convertExpression: new Expression()};\r\n    // this.time = this.time.bind(this);\r\n  }\r\n\r\n  time = (event) => {\r\n    const {name, value} = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleExpression = (event) => {\r\n    this.time(event);\r\n    console.log(event.target.value);\r\n    this.setState({ message: this.state.expression.convertExpression.expression(String(event.target.value)) })\r\n  }\r\n\r\n  render() {\r\n    const {cron, message} = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"center\">CRON INPUT</Divider>\r\n        <Row justify=\"center\" gutter={16}>\r\n          <Col className=\"gutter-row\" span={4}>\r\n            <Input \r\n              placeholder=\"* * * * * *\"\r\n              name=\"cron\"\r\n              value={cron}\r\n              style={{ textAlign: 'center' }}\r\n              onChange={this.handleExpression}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"center\" gutter={16}>\r\n          <Title level={2}>{message}</Title>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputsCron;\r\n","import React, {Component} from 'react'\n// import Header from '../Components/Header'\n// import Table from '../Components/Table'\n// import Form from '../Components/Form'\nimport InputCron from '../Components/InputCron'\n\nclass App extends Component {\n\n  state = {\n    characters: [],\n  }\n\n  handleSubmit = (character) => {\n    console.log(character);\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  render () {\n    return (\n      <>\n        <InputCron />\n      </>\n    );\n  }\n}\n\nexport default App;","import ReactDOM from \"react-dom\";\nimport App from './App/App'\nimport \"antd/dist/antd.css\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}